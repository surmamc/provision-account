apiVersion: kops.k8s.io/v1alpha2
kind: Cluster
metadata:
  name: dev-00.staging-us-west-2.cluster.doorcrawl.com
spec:
  api:
    loadBalancer:
      type: "Public"
  authorization:
    rbac: {}
  channel: stable
  cloudProvider: aws
  configBase: s3://dd-cluster-state-staging/dev-00.staging-us-west-2.cluster.doorcrawl.com
  dnsZone: Z2QKPI2TRTTYBJ
  etcdClusters:
  - name: main
    cpuRequest: 1000m
    memoryRequest: 1Gi
    etcdMembers:
    - name: a
      instanceGroup: master-us-west-2a
      volumeSize: 250
      volumeType: io1
      volumeIops: 550
    - name: b
      instanceGroup: master-us-west-2b
      volumeSize: 250
      volumeType: io1
      volumeIops: 550
    - name: c
      instanceGroup: master-us-west-2c
      volumeSize: 250
      volumeType: io1
      volumeIops: 550
    - name: a-1
      instanceGroup: master-us-west-2a-1
      volumeSize: 250
      volumeType: io1
      volumeIops: 550
    - name: b-1
      instanceGroup: master-us-west-2b-1
      volumeSize: 250
      volumeType: io1
      volumeIops: 550
    manager:
      env:
      - name: ETCD_QUOTA_BACKEND_BYTES
        value: "8589934592"
      - name: ETCD_LISTEN_METRICS_URLS
        value: http://0.0.0.0:5001
      - name: ETCD_METRICS
        value: basic
  - name: events
    cpuRequest: 1000m
    memoryRequest: 1Gi
    etcdMembers:
    - name: a
      instanceGroup: master-us-west-2a
      volumeSize: 250
      volumeType: gp2
      volumeIops: 300
    - name: b
      instanceGroup: master-us-west-2b
      volumeSize: 250
      volumeType: gp2
      volumeIops: 300
    - name: c
      instanceGroup: master-us-west-2c
      volumeSize: 250
      volumeType: gp2
      volumeIops: 300
    - name: a-1
      instanceGroup: master-us-west-2a-1
      volumeSize: 250
      volumeType: gp2
      volumeIops: 300
    - name: b-1
      instanceGroup: master-us-west-2b-1
      volumeSize: 250
      volumeType: gp2
      volumeIops: 300
    manager:
      env:
      - name: ETCD_QUOTA_BACKEND_BYTES
        value: "8589934592"
      - name: ETCD_LISTEN_METRICS_URLS
        value: http://0.0.0.0:5002
      - name: ETCD_METRICS
        value: basic
  hooks:
  - name: mod-probe-nf-conntrack.service
    before:
    - kubelet.service
    roles:
    - Node
    manifest: |
      Type=oneshot
      ExecStart=/usr/sbin/modprobe nf_conntrack
      ExecStart=/usr/sbin/sysctl -w net.netfilter.nf_conntrack_max=4194304 net.netfilter.nf_conntrack_generic_timeout=60 net.netfilter.nf_conntrack_icmp_timeout=10 net.netfilter.nf_conntrack_tcp_timeout_close_wait=20 net.netfilter.nf_conntrack_tcp_timeout_established=10800 net.netfilter.nf_conntrack_tcp_timeout_fin_wait=30 net.netfilter.nf_conntrack_udp_timeout_stream=60
  - name: set-local-interface-for-dns
    manifest: |
      Type=oneshot
      ExecStart=/bin/bash -c "apt install -y net-tools && ifconfig lo:0 192.168.0.1 up"
  iam:
    allowContainerRegistry: true
    legacy: false
  kubeAPIServer:
    enableAdmissionPlugins:
    - NamespaceLifecycle
    - LimitRanger
    - ServiceAccount
    - PersistentVolumeLabel
    - DefaultStorageClass
    - DefaultTolerationSeconds
    - MutatingAdmissionWebhook
    - ValidatingAdmissionWebhook
    - NodeRestriction
    - Priority
    - ResourceQuota
    appendAdmissionPlugins: [PodSecurityPolicy]
    featureGates:
      EphemeralContainers: "true"
    runtimeConfig:
      admissionregistration.k8s.io/v1beta1: "true"
    auditLogPath: "-"
    auditLogMaxAge: 10
    auditLogMaxBackups: 1
    auditLogMaxSize: 100
    auditPolicyFile: /srv/kubernetes/audit-policy.yaml
    # Service account token volume projection configurations
    apiAudiences:
    - "kubernetes.svc.default"
    - "sec-poc-spire-server"

  kubeControllerManager:
    allocateNodeCIDRs: false
    podEvictionTimeout: "30s"
    nodeMonitorGracePeriod: "16s"
    nodeMonitorPeriod: "2s"
  kubelet:
    anonymousAuth: false
    authenticationTokenWebhook: true
    authorizationMode: Webhook
    clusterDNS: 192.168.0.1,10.4.240.10
    featureGates:
      EphemeralContainers: "true"
    imageGCHighThresholdPercent: 75
    imageGCLowThresholdPercent: 50
    nodeStatusUpdateFrequency: "4s"
    allowedUnsafeSysctls:
      - net.*
    kubeReserved:
      cpu: 500m
      memory: 500Mi
    systemReserved:
      cpu: 500m
      memory: 500Mi
  kubeDNS:
    provider: CoreDNS
    coreDNSImage: 611706558220.dkr.ecr.us-west-2.amazonaws.com/public-image-mirror:dockerhub_coredns-1.8.0
    externalCoreFile: |-
        .:53 {
            errors
            health {
              lameduck 5s
            }
            kubernetes cluster.local. in-addr.arpa ip6.arpa {
              pods insecure
              fallthrough in-addr.arpa ip6.arpa
            }
            prometheus :9153
            ready :8181
            forward . /etc/resolv.conf
            loop
            cache 30
            loadbalance
            reload
        }

  kubeProxy:
    metricsBindAddress: 0.0.0.0
    conntrackMaxPerCore: 0 # Use system default
    conntrackMin: 0        # Use system default
  kubernetesApiAccess:
  - 52.37.255.95/32
  - 54.190.195.86/32
  - 35.166.43.116/32
  - 54.148.3.117/32
  - 52.89.135.195/32
  - 44.242.143.208/28
  kubernetesVersion: 1.20.9
  masterPublicName: api.dev-00.staging-us-west-2.cluster.doorcrawl.com
  networkCIDR: 10.4.0.0/17
  additionalNetworkCIDRs:
  - 10.4.128.0/17
  networkID: vpc-87eeb5fe
  networking:
    amazonvpc:
      imageName: "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.9.0"
      env:
      - name: AWS_VPC_K8S_CNI_EXTERNALSNAT
        value: "true"
      - name: MINIMUM_IP_TARGET
        value: "20"
      - name: WARM_IP_TARGET
        value: "2"
  nonMasqueradeCIDR: 10.4.128.0/17
  serviceClusterIPRange: 10.4.240.0/20
  sshAccess:
  - 10.4.0.0/17
  sshKeyName: k8s-host-key
  subnets:
  - cidr: 10.4.128.0/19
    id: subnet-06eb6f9cc2b4326c9
    name: us-west-2a
    type: Private
    zone: us-west-2a
  - cidr: 10.4.160.0/19
    id: subnet-0e44d0a2022d1d53b
    name: us-west-2b
    type: Private
    zone: us-west-2b
  - cidr: 10.4.192.0/19
    id: subnet-02a71a84066ca23fe
    name: us-west-2c
    type: Private
    zone: us-west-2c
  - cidr: 10.4.64.0/21
    id: subnet-62530838
    name: us-west-2c-21
    type: Private
    zone: us-west-2c
  - cidr: 10.4.104.0/25
    id: subnet-0b73a3fe2e7a47223
    name: utility-us-west-2a
    type: Utility
    zone: us-west-2a
  - cidr: 10.4.104.128/25
    id: subnet-0c3f557768dc1b049
    name: utility-us-west-2b
    type: Utility
    zone: us-west-2b
  - cidr: 10.4.105.0/25
    id: subnet-0b337c22614514b06
    name: utility-us-west-2c
    type: Utility
    zone: us-west-2c
  topology:
    dns:
      type: Public
    masters: private
    nodes: private
  fileAssets:
  - name: audit-policy
    path: /srv/kubernetes/audit-policy.yaml
    roles:
    - Master
    content: |
      apiVersion: audit.k8s.io/v1 # This is required.
      kind: Policy
      # Don't generate audit events for all requests in RequestReceived stage.
      omitStages:
        - "RequestReceived"
      rules:
        # audit tiller operations, due to skipping ops from `kube-system` sa (below)
        - level: Request
          users:
            - system:serviceaccount:kube-system:tiller
          verbs: [ "patch", "update", "create", "delete", "deletecollection" ]

        # deletecollection calls can be large, don't log responses for expected namespace deletions
        - level: Request
          users: ["system:serviceaccount:kube-system:namespace-controller"]
          verbs: ["deletecollection"]
          omitStages:
            - "RequestReceived"

        # Do not log from kube-system accounts
        - level: None
          userGroups:
          - system:serviceaccounts:kube-system

        - level: None
          users:
          - system:apiserver
          - system:kube-scheduler
          - system:volume-scheduler
          - system:kube-controller-manager
          - system:serviceaccount:kube-system:endpoint-controller
          - system:node

        # Do not log from collector
        - level: None
          users:
          - system:serviceaccount:collectorforkubernetes:collectorforkubernetes

        # Don't log nodes communications
        - level: None
          userGroups:
          - system:nodes

        # Don't log these read-only URLs.
        - level: None
          nonResourceURLs:
          - /healthz*
          - /version
          - /swagger*

        # node and pod status calls from nodes are high-volume and can be large, don't log responses for expected updates from nodes
        - level: None
          users: ["kubelet", "system:node-problem-detector", "system:serviceaccount:kube-system:node-problem-detector"]
          verbs: ["update","patch"]
          resources:
          - group: "" # core
            resources: ["nodes/status", "pods/status"]
          omitStages:
            - "RequestReceived"

        - level: None
          userGroups: ["system:nodes"]
          verbs: ["update","patch"]
          resources:
          - group: "" # core
            resources: ["nodes/status", "pods/status"]
          omitStages:
            - "RequestReceived"

        # Don't log events requests.
        - level: None
          resources:
          - group: "" # core
            resources: ["events"]

        # Skip helm-operator, its generating lots of audit events due to syncs
        - level: None
          users: ["system:serviceaccount:flux:helm-operator"]

        # Secrets, ConfigMaps, and TokenReviews can contain sensitive & binary data,
        # so only log at the Metadata level.
        - level: Metadata
          resources:
          - group: "" # core
            resources: ["secrets", "configmaps"]
          - group: authentication.k8s.io
            resources: ["tokenreviews"]
          omitStages:

        - level: Request
          verbs: [ "patch", "update", "create", "delete", "deletecollection" ]

  - name: mod.nodes
    path: /etc/modules-load.d/extra-nodes.conf
    roles:
    - Node
    content: |-
      nf_conntrack
